name: Deploy to EKS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO: ${{ secrets.ECR_REPO_NAME }}
  CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  NAMESPACE: ${{ secrets.EKS_NAMESPACE }}
  DEPLOYMENT: ${{ secrets.K8S_DEPLOYMENT_NAME }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set SHA Image Tag
        id: vars
        run: echo "IMAGE_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          docker build -t $ECR_REPO:$IMAGE_TAG .
          docker tag $ECR_REPO:$IMAGE_TAG 794038257373.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPO:$IMAGE_TAG
          docker push 794038257373.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPO:$IMAGE_TAG

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/$DEPLOYMENT dev-twallet-container=794038257373.dkr.ecr.ap-south-1.amazonaws.com/$ECR_REPO:$IMAGE_TAG -n $NAMESPACE
          if ! kubectl rollout status deployment/$DEPLOYMENT -n $NAMESPACE --timeout=60s; then
            echo "Deployment failed. Rolling back..."
            kubectl rollout undo deployment/$DEPLOYMENT -n $NAMESPACE
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"ðŸš¨ Deployment failed and rollback triggered for *'$DEPLOYMENT'* in *'$NAMESPACE'*!"}' \
              $SLACK_WEBHOOK
            exit 1
          fi

      - name: Notify Slack on Success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"âœ… Deployment of *'$DEPLOYMENT'* in *'$NAMESPACE'* succeeded with image tag *'$IMAGE_TAG'*."}' \
          $SLACK_WEBHOOK
